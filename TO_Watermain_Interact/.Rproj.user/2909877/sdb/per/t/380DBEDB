{
    "contents" : "# Mapping Watermain Breaks in City of Toronto ####\n\n# Initialize Session ####\ncat(\"\\014\")\nrm(list=ls())\ncat(\"\\014\")\nSys.Date()\nsessionInfo()\n\n\nlist.of.packages <- c(\"readxl\",\"ggplot2\",\"dplyr\",\"magrittr\",\n                      \"viridis\",\"lubridate\",\"grid\",\"gridExtra\",\n                      \"maps\",\"ggmap\",\"cluster\",\"knitr\")\nnew.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,\"Package\"])]\nif(length(new.packages)) install.packages(new.packages)\nlapply(list.of.packages, require, character.only = TRUE)\n\ngetwd()\nsetwd(\"H:/Eugene_R_Code/Toronto Water Main Breaks\")\n\nwatermain.files <- list.files(\"data\", pattern = \"\\\\.xlsx$\")\n\n# Data ####\nwm.df <- read_excel(paste0(\"data/\",watermain.files))\nhead(wm.df)\nnames(wm.df) <- c(\"Date\",\"Year\",\"X_coord\",\"Y_coord\")\ndim(wm.df)\nstr(wm.df)\nwm.df$Year_f <- as.factor(wm.df$Year)\nwm.df$Year <- as.integer(wm.df$Year)\n\n# Add extra resolution with dates\nwm.df$week <- floor_date(wm.df$Date, unit = \"week\")\nwm.df$month <- floor_date(wm.df$Date, unit = \"month\")\n\n# Save modified data frame ####\n#write.table(wm.df,file = \"clean_data/TO_watermain_breaks.csv\",sep = \",\", row.names = FALSE)\n\n# Exploratory Analysis + Cleaning ####\nsummary(wm.df) #some values for X and Y coords are very high or low? likely errors\n\nwm.df %>% arrange(desc(Y_coord))\nwm.df %>% arrange(desc(X_coord)) #error is X_coord = 4845681.6, not a Y_coord either\n\nsummary(wm.df$X_coord)\nhead(sort(wm.df$X_coord,decreasing = T))\nwm.df[which(wm.df$X_coord == max(wm.df$X_coord)),]\nwm.df <- wm.df[-which(wm.df$X_coord == max(wm.df$X_coord)),] #remove error 2000-01-22\n\nsummary(wm.df$Y_coord)\nhead(sort(wm.df$Y_coord,decreasing = F)) #first three Y_coord are very low, likely errors\nsort(wm.df$Y_coord,decreasing = F)[1:3] # Y_coord errors, three\nwm.df[which(wm.df$Y_coord %in% sort(wm.df$Y_coord,decreasing = F)[1:3]),]\nwm.df <- wm.df[-which(wm.df$Y_coord %in% sort(wm.df$Y_coord,decreasing = F)[1:3]),] #remove these errors\n\n# Visualize Spatial Data ####\nplot.TO.wm <- function(y1,y2 = NULL,m1 = NULL,m2 = NULL, #next step is to generate option for breakdown by months in a year\n                       face = TRUE, ncol = 5, band = 150, \n                       file.out = FALSE, w = NULL, h = NULL, title.size = 18) {\n\n   my_theme <- theme(axis.text = element_blank(),axis.title = element_blank(),\n                     axis.ticks = element_blank(), legend.position = \"none\",\n                     panel.grid.minor = element_blank(), panel.grid.major = element_blank(),\n                     strip.background = element_rect(fill = \"grey85\"),\n                     strip.text = element_text(size = title.size*0.8), title = element_text(size = title.size),\n                     plot.background = element_rect(fill = \"grey95\"))\n   \n   if (missing(y2)) {\n   \n      g.out <- ggplot(data = wm.df %>% filter(Year == y1), aes(x = X_coord, y = Y_coord)) +\n         geom_point(size = 1, alpha = 0.5, colour = \"grey5\") +\n         labs(title = paste0(\"Point Density Map of Watermain Breaks\",\"\\n\",\n                             \"City of Toronto \",\"(\",y1,\")\")) +\n         stat_density_2d(aes(fill = ..density.., alpha = ..density..), \n                                 geom = \"tile\", contour = FALSE, n = band) +\n         scale_fill_viridis(guide = \"none\", option = \"inferno\") + my_theme +\n         geom_text(data = wm.df %>% filter(Year == y1) %>% \n                      summarise(n = paste(\"n =\",sum(Year=n()))),\n                   aes(x=328000,y=4830000,label = n), size = title.size*0.4)\n      \n      return(g.out)\n      \n   } else {\n      \n      g.out <- ggplot(data = wm.df %>% filter(Year %in% seq(y1,y2,1)), aes(x = X_coord, y = Y_coord)) +\n         geom_point(size = 1, alpha = 0.5, colour = \"grey5\") +\n         labs(title = paste0(\"Point Density Map of Watermain Breaks\",\"\\n\",\n                             \"City of Toronto \",\"(Cumulative \",y1,\"-\",y2,\")\")) +\n         stat_density_2d(aes(fill = ..density.., alpha = ..density..), \n                                 geom = \"tile\", contour = FALSE, n = band) +\n         scale_fill_viridis(guide = \"none\", option = \"inferno\") + my_theme\n         \n   }\n   \n   if (face == TRUE) {\n      \n      g.out <- g.out + facet_wrap(~Year, ncol = ncol, drop = TRUE) +\n         geom_text(data = wm.df %>% filter(Year %in% seq(y1,y2,1)) %>%\n                      group_by(Year) %>% summarise(n = paste(\"n =\",length(Year))),\n                   aes(x=328000,y=4830000,label = n), size = title.size*0.4)  \n      \n   } else {\n      \n      wm.df %>% filter(Year %in% seq(y1,y2,1)) %>%\n         summarise(n = paste(\"n =\",sum(Year=n())))\n      g.out <- g.out + \n         geom_text(data = wm.df %>% filter(Year %in% seq(y1,y2,1)) %>%\n                      summarise(n = paste(\"n =\",sum(Year=n()))),\n                   aes(x=328000,y=4830000,label = n), size = title.size*0.4)\n   }\n   \n   if(file.out == TRUE) {\n      \n      ppi <- 300\n      filename <- paste0(\"TO_watermains_\",y1,\"-\",y2,\".png\")\n      png(filename, width = w*ppi, height = h*ppi, res = ppi,units = \"px\", pointsize = .7)\n      print(g.out)\n      dev.off()\n\n   } else {\n      \n      return(g.out)\n      \n   }\n\n}\n\n# plot of only 2016\nplot.TO.wm(2016,band=250)\n\n# plot of only 1991\nplot.TO.wm(y1=1991,band = 200, file.out = F,\n           h = 8.5, w = 11)\n\n# cumulative plot of 2000-2005\nplot.TO.wm(2000,2005, face = F, band = 400,\n           h = 8.5, w = 11)\n\n# facet plot from 1995 to 1997\nplot.TO.wm(1993,1998,ncol=2,face = T, band = 200)\n\n# plot all yaers with 4 columns, 8*15 inch output\nplot.TO.wm(1990,2016,face = T,ncol = 4,band = 200,\n           file.out = TRUE, h = 14, w = 9)\n\n\n# Visualize Time Data ####\n\n# Number of counts in each month and week ####\nmonth.wm <- wm.df %>% count(month)\nweek.wm <- wm.df %>% count(week)\nyear.wm <- wm.df %>% group_by(Year) %>% count(Year)\n\nmthwk.wm <- wm.df %>% group_by(Year,week,month) %>%\n   count(week,month,Year) %>% mutate(month_n = month(month, label = T)) %>% mutate(yweek = week(week))\nmthwk.wm #counts by week, but corresponding month and year used\n\n\n# line plot\nggplot(data = week.wm, aes(x=week,y=n)) +\n   geom_line()\n\nggplot(data = mthwk.wm, aes(x=month,y=n)) +\n   geom_boxplot(aes(group = month),alpha=0.9) +\n   stat_summary(geom=\"line\",fun.y = \"mean\",color = \"red\",size=1.5,alpha=0.8) +\n   geom_smooth()\n\nggplot(mthwk.wm, aes(x=month_n,y=n)) +\n   geom_boxplot(aes(group=month_n))\n\nggplot(month.wm %>% mutate(month_n = month(month,label = T)) %>%\n          mutate(year_n = year(months)), aes(x=month_n,y=n)) +\n   geom_line(aes(group = year_n), colour = \"grey65\", alpha = 0.5, size = 0.8) +\n   stat_summary(aes(group=1),geom=\"line\",fun.y=\"mean\",color = \"red\", size = 1.5, alpha = 0.8)\n   \nggplot(mthwk.wm, aes(x=yweek,y=n)) +\n   geom_line(aes(colour = as.factor(Year)), alpha = 0.6, size = 1.5)\n\n\n#jitter\nggplot(data = mthwk.wm, aes(x = week, y = n)) +\n   geom_jitter(width = 0.4, size = 2, alpha = 0.5)\n\n# yearly line plot\nggplot(data = year.wm, aes(x = Year, y = n)) +\n   geom_line() + geom_smooth(method = \"loess\", se = TRUE) +\n   geom_smooth(method = \"lm\", se = FALSE, colour = \"red\")\n\nsummary(lm(n ~ Year, year.wm))\nlm(n ~ Year, year.wm)$coef[2]\n\n\n# Overlay on Map\nnames(wm.df)\nwm.coord <- wm.df %>% select(X_coord, Y_coord) %>% as.data.frame()\nlibrary(rgdal)\ncoordinates(wm.coord) <-  ~ X_coord + Y_coord\nstr(wm.coord)\n#http://leware.net/geo/utmgoogleapp.htm\n\nwm.coord <- SpatialPoints(wm.coord, proj4string=CRS(\"+proj=utm + +zone=17T +datum=NAD27\"))\nwm.latlon <- spTransform(wm.coord, CRS(\"+proj=longlat +datum=WGS84\"))\ndf.latlon <- as.data.frame(wm.latlon)\nsbbox <- make_bbox(lon = df.latlon[,1], lat = df.latlon[,2], f = 0.01)\nmy_map <- get_map(location = sbbox, maptype = \"roadmap\", \n                  scale = 2, color=\"bw\", zoom = 10)\nggmap(my_map)\n",
    "created" : 1510677273287.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1213931584",
    "id" : "380DBEDB",
    "lastKnownWriteTime" : 1510606740,
    "path" : "H:/Eugene_R_Code/Toronto Water Main Breaks/TO_watermain.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}